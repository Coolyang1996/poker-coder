{"version":3,"sources":["interfaces/index.ts","poker/poker-coder/en/joker.ts","components/poker-item.tsx","poker/poker-coder/en/spade.ts","poker/poker-coder/en/heart.ts","poker/poker-coder/en/club.ts","poker/poker-coder/en/diamond.ts","poker/index.ts","store/poker/actions.ts","store/poker/types.ts","components/card-icon-svg/index.tsx","components/poker-container.tsx","api/index.ts","views/app-dashboard/index.tsx","views/App.tsx","store/poker/reducers.ts","store/index.ts","serviceWorker.ts","index.tsx"],"names":["CardKey","CardKeyAlias","CardSuit","UserGender","CardSuitAlias","SidebarType","JokerCards","key","BigJoker","type","Jokers","coder","gender","Male","picture","milestone","year","event","quote","LittleJoker","Other","SpadeCards","Ace","Spades","Female","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten","Jack","Queen","King","HeartCards","Hearts","ClubCards","Clubs","DiamondCards","Diamonds","PokerList","receivePoker","list","payload","useStyles","makeStyles","theme","createStyles","svg","transform","BigJokersIconSvg","classes","xmlns","x","y","width","height","viewBox","style","fill","className","fillRule","stroke","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeDasharray","strokeDashoffset","fontFamily","fontWeight","fontSize","textAnchor","mixBlendMode","d","LittleJokersIconSvg","SpadesIconSvg","HeartsIconSvg","ClubsIconSvg","DiamondsIconSvg","CardIconSvgSwitcher","cardType","cardKey","renderSvg","root","paddingBottom","position","cardWrap","backgroundColor","textAlign","leftSidebarWrap","left","display","writingMode","rightSidebarWrap","right","iconWrap","bottom","keyText","margin","sidebarText","justifyContent","alignItems","breakpoints","up","coderTitle","bodyWrap","flexFlow","bodyImg","flex","bodyMedia","bodyMilestone","flexDirection","minHeight","marginBottom","bodyGridWrap","textLeft","textRight","bodyQuote","fontStyle","SidebarWrap","poker","direction","Left","BodyWrap","CardMedia","image","title","map","ms","index","Grid","container","spacing","item","xs","JSON","stringify","PokerItem","Card","Right","gridRoot","padding","flexGrow","PokerContainer","connect","pokerReducer","fetchPoker","dispatch","Promise","resolve","success","data","then","catch","useEffect","sm","md","AppDashboard","Container","App","fallback","state","loading","actions","rootReducer","combineReducers","loggerMiddleware","createLogger","Boolean","window","location","hostname","match","store","middleWares","thunkMiddleware","middleWareEnhancer","applyMiddleware","createStore","composeWithDevTools","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0e320c9.chunk.js","sourcesContent":["export const CardKeyAlias = ['BigJoker', 'LittleJoker', 'A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K']\n\nexport enum CardKey {\n  BigJoker, LittleJoker, Ace, Two, Three, Four, Five, Six, Seven, Eight, Nine, Ten, Jack, Queen, King,\n}\n\nexport const CardSuitAlias = ['Jokers', 'Spades', 'Hearts', 'Clubs', 'Diamonds']\n\nexport enum CardSuit {\n  Jokers, Spades, Hearts, Clubs, Diamonds,\n}\n\nexport enum UserGender {\n  Male,\n  Female,\n  Other,\n}\n\nexport interface PokerCard {\n  key: CardKey\n  type: CardSuit\n  coder: string\n  gender: UserGender\n  picture: string\n  milestone: { year: number, event: string }[]\n  quote: string\n}","import { PokerCard, CardKey, CardSuit, UserGender } from \"../../../interfaces\"\n\nconst JokerCards: PokerCard[] = [\n  {\n    key: CardKey.BigJoker,\n    type: CardSuit.Jokers,\n    coder: \"David Heinemeier Hansson\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/David_Heinemeier_Hansson.jpg\",\n    milestone: [\n      { year: 2003, event: \"Created Ruby on Rails\" },\n    ],\n    quote: \"If you`re not working on your best idea right now, you`re doing it wrong.\"\n  },\n  {\n    key: CardKey.LittleJoker,\n    type: CardSuit.Jokers,\n    coder: \"Satoshi Nakamoto\",\n    gender: UserGender.Other,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Satoshi_Nakamoto.jpg\",\n    milestone: [\n      { year: 2008, event: \"Invented Blockchain\" },\n      { year: 2008, event: \"Designed Bitcoin\" },\n    ],\n    quote: \"With e-currency based on cryptographic proof, without the need to trust a third party middle-man, money can be secure and transactions effortless.\"\n  }\n]\n\nexport default JokerCards","import React from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport Grid from '@material-ui/core/Grid'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardIconSvgSwitcher from './card-icon-svg'\nimport { PokerCard, CardKeyAlias, CardSuitAlias } from '../interfaces'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 0,\n      width: '100%',\n      paddingBottom: '140%',\n      position: 'relative',\n    },\n    cardWrap: {\n      height: '100%',\n      width: '100%',\n      backgroundColor: '#fff',\n      position: 'absolute',\n      textAlign: 'center',\n    },\n    leftSidebarWrap: {\n      height: '100%',\n      width: '17%',\n      left: 0,\n      display: 'inline-block',\n      backgroundColor: '#fff',\n      position: 'absolute',\n      writingMode: 'vertical-lr',\n      transform: 'rotate(180deg)',\n    },\n    rightSidebarWrap: {\n      height: '100%',\n      width: '17%',\n      right: 0,\n      display: 'inline-block',\n      backgroundColor: '#fff',\n      position: 'absolute',\n      writingMode: 'vertical-lr',\n    },\n    iconWrap: {\n      position: 'absolute',\n      bottom: '5%',\n    },\n    keyText: {\n      fontSize: '26px',\n      margin: '2px 0',\n      display: 'inline-block',\n      transform: 'rotate(90deg)',\n    },\n    sidebarText: {\n      fontSize: '20px',\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      [theme.breakpoints.up('xs')]: {\n        fontSize: '16px',\n      },\n      [theme.breakpoints.up('sm')]: {\n        fontSize: '20px',\n      },\n    },\n    coderTitle: {\n      bottom: '15px',\n      position: 'relative',\n    },\n    bodyWrap: {\n      height: '100%',\n      width: '66%',\n      backgroundColor: '#fff',\n      position: 'absolute',\n      left: '17%',\n      display: 'flex',\n      flexFlow: 'column',\n    },\n    bodyImg: {\n      flex: '1 1 auto',\n      width: '100%',\n      backgroundColor: '#fff',\n      display: 'flex',\n      alignItems: 'center',\n    },\n    bodyMedia: {\n      flex: 1,\n      height: '77%',\n      margin: '0 10px',\n      backgroundColor: 'bisque',\n    },\n    bodyMilestone: {\n      flex: '0 1 auto',\n      width: '100%',\n      backgroundColor: '#fff',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      minHeight: '48px',\n      marginBottom: '10px',\n    },\n    bodyGridWrap: {\n      width: '100%',\n      display: 'table',\n    },\n    year: {\n      fontWeight: 'bold',\n    },\n    textLeft: {\n      textAlign: 'left',\n    },\n    textRight: {\n      textAlign: 'right',\n    },\n    bodyQuote: {\n      flex: '0 1 auto',\n      width: '100%',\n      backgroundColor: '#fff',\n      display: 'flex',\n      alignItems: 'center',\n      minHeight: '36px',\n      marginBottom: '10px',\n      fontStyle: 'italic',\n    },\n  }),\n)\n\ninterface PokerItemProps {\n  poker: PokerCard\n}\n\nenum SidebarType {\n  Left, Right\n}\n\ninterface SidebarProps {\n  direction: SidebarType\n}\n\nconst SidebarWrap: React.FC<PokerItemProps & SidebarProps> = ({ poker, direction }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={direction === SidebarType.Left\n      ? `${classes.leftSidebarWrap}`\n      : `${classes.rightSidebarWrap}`\n    }>\n      <h1 className={classes.sidebarText}>\n        <span className={classes.coderTitle}>{poker.coder}</span>\n        <span className={classes.iconWrap}>\n          <CardIconSvgSwitcher cardType={CardSuitAlias[poker.type]} cardKey={CardKeyAlias[poker.key]}/>\n          {\n            CardSuitAlias[poker.type] === 'Jokers'\n              ? null\n              : <span className={classes.keyText}>{CardKeyAlias[poker.key]}</span>\n          }\n        </span>\n      </h1>\n    </div>\n  )\n}\n\nconst BodyWrap: React.FC<PokerItemProps> = ({ poker }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.bodyWrap}>\n      <div className={classes.bodyImg}>\n        <CardMedia\n          className={classes.bodyMedia}\n          image={poker.picture}\n          title={poker.coder}\n        />\n      </div>\n      <div className={classes.bodyMilestone}>\n        <div className={classes.bodyGridWrap}>\n          {poker.milestone.map((ms, index) => (\n            <Grid container spacing={1} key={index}>\n              <Grid item xs={3} className={`${classes.textRight} ${classes.year}`}>\n                {ms.year}:\n              </Grid>\n              <Grid item xs={9} className={classes.textLeft}>\n                <span>{ms.event}</span>\n              </Grid>\n            </Grid>\n          ))}\n        </div>\n      </div>\n      <div className={classes.bodyQuote}>\n        {JSON.stringify(poker.quote)}\n      </div>\n    </div>\n  )\n}\n\nconst PokerItem: React.FC<PokerItemProps> = ({ poker }) => {\n  const classes = useStyles()\n\n  return (\n    <Card className={classes.root}>\n      <Card className={classes.cardWrap}>\n        <SidebarWrap poker={poker} direction={SidebarType.Left} />\n        <BodyWrap poker={poker}/>\n        <SidebarWrap poker={poker} direction={SidebarType.Right} />\n      </Card>\n    </Card>\n  )\n}\n\nexport default PokerItem","import { PokerCard, CardKey, CardSuit, UserGender } from \"../../../interfaces\"\n\nconst SpadeCards: PokerCard[] = [\n  {\n    key: CardKey.Ace,\n    type: CardSuit.Spades,\n    coder: \"Ada Lovelace\",\n    gender: UserGender.Female,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Ada_Lovelace.jpg\",\n    milestone: [\n      { year: 1843, event: \"Invented computer algorithms\" },\n      { year: 1843, event: \"Wrote the world`s first computer program\" },\n    ],\n    quote: \"The Analytical Engine has no pretensions whatever to originate anything. It can do whatever we know how to order it to perform.\"\n  },\n  {\n    key: CardKey.Two,\n    type: CardSuit.Spades,\n    coder: \"Linus Torvalds\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Linus_Torvalds.jpeg\",\n    milestone: [\n      { year: 1991, event: \"Created the Linux operating system\" },\n      { year: 2005, event: \"Created the Git Version control system\" },\n    ],\n    quote: \"Intelligence is the ability to avoid doing work, yet getting the work done.\"\n  },\n  {\n    key: CardKey.Three,\n    type: CardSuit.Spades,\n    coder: \"Bjarne Stroustrup\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Bjarne_Stroustrup.jpg\",\n    milestone: [\n      { year: 1985, event: \"Created the C++ programming language\" },\n    ],\n    quote: \"Legacy code often differs from its suggested alternative by actually working and scaling.\"\n  },\n  {\n    key: CardKey.Four,\n    type: CardSuit.Spades,\n    coder: \"Patricia Sellinger\",\n    gender: UserGender.Female,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Patricia_Sellinger.jpeg\",\n    milestone: [\n      { year: 1974, event: \"Helped create System R, the first implementation of SQL\" },\n    ],\n    quote: \"One of the wonderful things about data management is it includes all of the problems of programming languages, all of the problems of operating systems.\"\n  },\n  {\n    key: CardKey.Five,\n    type: CardSuit.Spades,\n    coder: \"Tim Berners-Lee\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Tim_Berners-Lee.jpg\",\n    milestone: [\n      { year: 1991, event: \"Invented the World Wide Web\" },\n    ],\n    quote: \"The Web as I envisaged it, we have not seen it yet. The future is still so much bigger than the past.\"\n  },\n  {\n    key: CardKey.Six,\n    type: CardSuit.Spades,\n    coder: \"Richard Stallman\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Richard_Stallman.jpg\",\n    milestone: [\n      { year: 1983, event: \"Developed the GNU operating system\" },\n      { year: 1985, event: \"Founded the Free Software Foundation\" },\n      { year: 1985, event: \"Created the GNU Emacs code editor\" },\n    ],\n    quote: \"Sharing is good. And with digital technology, sharing is easy.\"\n  },\n  {\n    key: CardKey.Seven,\n    type: CardSuit.Spades,\n    coder: \"Raymond Kurzweil\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Raymond_Kurzweil.jpg\",\n    milestone: [\n      { year: 1974, event: \"Invented omni-font optical character recognition\" },\n      { year: 1987, event: \"Developed the first commercial text-to-speech synthesizer\" },\n    ],\n    quote: \"Once a computer achieves human intelligence it will necessary roar past it.\"\n  },\n  {\n    key: CardKey.Eight,\n    type: CardSuit.Spades,\n    coder: \"Ken Thompson\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Ken_Thompson.jpg\",\n    milestone: [\n      { year: 1969, event: \"Designed the B programming language\" },\n      { year: 1970, event: \"Co-created the Unix operating\" },\n      { year: 2009, event: \"Co-created the Go programming language\" },\n    ],\n    quote: \"When in doubt, use brute force.\"\n  },\n  {\n    key: CardKey.Nine,\n    type: CardSuit.Spades,\n    coder: \"Ray Tomlinson\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Ray_Tomlinson.jpg\",\n    milestone: [\n      { year: 1971, event: \"Invented email\" },\n    ],\n    quote: \"I see email being used, by and large, exactly the way I envisioned. Everybody uses it in di☒erent ways, but they use it in a way they find works for them.\"\n  },\n  {\n    key: CardKey.Ten,\n    type: CardSuit.Spades,\n    coder: \"Mary Allen Wilkes\",\n    gender: UserGender.Female,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Mary_Allen_Wilkes.jpeg\",\n    milestone: [\n      { year: 1961, event: \"Designed interactive operating system LAP6 for the LINC\" },\n      { year: 1965, event: \"First person to build and use a personal computer in the home.\" },\n    ],\n    quote: \"We had the quaint notion that software should be completely, absolutely free of bugs. Unfortunately it`s a notion that never really quite caught on.\"\n  },\n  {\n    key: CardKey.Jack,\n    type: CardSuit.Spades,\n    coder: \"Edsger Dijkstra\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Edsger_Dijkstra.jpg\",\n    milestone: [\n      { year: 1956, event: \"Invented the Dijkstra Shortest-Path Algorithm\" },\n      { year: 1965, event: \"Created the Dining Philosophers problem\" },\n    ],\n    quote: \"The question of whether computers can think is like the question of whether submarines can swim.\"\n  },\n  {\n    key: CardKey.Queen,\n    type: CardSuit.Spades,\n    coder: \"Douglas Engelbart\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Douglas_Engelbart.jpg\",\n    milestone: [\n      { year: 1964, event: \"Invented the mouse\" },\n      { year: 1973, event: \"Helped invent the Graphic User Interface\" },\n    ],\n    quote: \"The better we get at getting better, the faster we will get better.\"\n  },\n  {\n    key: CardKey.King,\n    type: CardSuit.Spades,\n    coder: \"Konrad Zuse\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Konrad_Zuse.jpg\",\n    milestone: [\n      { year: 1938, event: \"Built the first binary computer\" },\n      { year: 1941, event: \"Built the first programmable digital computer\" },\n      { year: 1945, event: \"Designed the first high-level programming language\" },\n    ],\n    quote: \"You could say I was too lazy to calculate, so I invented the computer.\"\n  },\n]\n\nexport default SpadeCards","import { PokerCard, CardKey, CardSuit, UserGender } from \"../../../interfaces\"\n\nconst HeartCards: PokerCard[] = [\n  {\n    key: CardKey.Ace,\n    type: CardSuit.Hearts,\n    coder: \"Grace Hopper\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Grace_Hopper.jpg\",\n    milestone: [\n      { year: 1945, event: \"Coined the term \\\"bug\\\"\" },\n      { year: 1952, event: \"Invented the compiler\" },\n      { year: 1959, event: \"Helped develop COBOL\" },\n    ],\n    quote: \"When we need greater computer power, the answer is not to get a bigger computer, but to build systems of computers and operate them in parallel.\"\n  },\n  {\n    key: CardKey.Two,\n    type: CardSuit.Hearts,\n    coder: \"Andrew Ng\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Andrew_Ng.jpg\",\n    milestone: [\n      { year: 2007, event: \"Lead the Stanford Artificial Intelligence Robot Project\" },\n      { year: 2008, event: \"Lead the Stanford Autonomous Helicopter Project\" },\n      { year: 2011, event: \"Online Machine Learning Course\" },\n    ],\n    quote: \"Today I actually have a hard time thinking of an industry that I don`t think AI will transform in the next several years.\"\n  },\n  {\n    key: CardKey.Three,\n    type: CardSuit.Hearts,\n    coder: \"Corrinne Yu\",\n    gender: UserGender.Female,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Corrinne_Yu.jpg\",\n    milestone: [\n      { year: 1990, event: \"Wrote code for the US Space Shuttle program\" },\n      { year: 1994, event: \"Created her own 3D graphics engines\" },\n      { year: 2008, event: \"Lead development of the Halo game series\" },\n    ],\n    quote: \"Sometimes I cuddle with my code. I grab some code print-outs, surround myself with a few books, hold onto a legal pad, curl up on a couch with a blanket and start reading and scribbling away.\"\n  },\n  {\n    key: CardKey.Four,\n    type: CardSuit.Hearts,\n    coder: \"Brian Fox\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Brian_Fox.png\",\n    milestone: [\n      { year: 1989, event: \"Created the GNU Bash Shell\" },\n      { year: 2008, event: \"Co-authored the OVC open sourrce voting system\" },\n    ],\n    quote: \"I try hard to not 'work' Instead. I try to stay focused on why I`m doing what I do, so that I can truly enjoy the sense of satisfaction when I am finished.\"\n  },\n  {\n    key: CardKey.Five,\n    type: CardSuit.Hearts,\n    coder: \"Guido Van Rossum\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Guido_Van_Rossum.jpg\",\n    milestone: [\n      { year: 1990, event: \"Created Python\" },\n    ],\n    quote: \"Python is an experiment in how much freedom programmers need. Too much freedom and nobody can read another`s code; too little and expressiveness is endangered.\"\n  },\n  {\n    key: CardKey.Six,\n    type: CardSuit.Hearts,\n    coder: \"Larry Wall\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Larry_Wall.jpg\",\n    milestone: [\n      { year: 1985, event: \"Created Patch, a precursor to Git\" },\n      { year: 1987, event: \"Created the Perl programming language\" },\n    ],\n    quote: \"The only reason I`ve managed to run this open source project is that I have learned to delegate even the delegation to other people.\"\n  },\n  {\n    key: CardKey.Seven,\n    type: CardSuit.Hearts,\n    coder: \"Bob Frankston & Dan Bricklin\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Dan_Bricklin_And_Bob_Frankston.jpg\",\n    milestone: [\n      { year: 1979, event: \"Created VisiCalc, the first spreadsheet program\" },\n    ],\n    quote: \"In a good system, just doing what you normally would do to help yourself helps everybody. - Dan Bricklin\"\n  },\n  {\n    key: CardKey.Eight,\n    type: CardSuit.Hearts,\n    coder: \"Adele Goldberg\",\n    gender: UserGender.Female,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Adele_Goldberg.jpg\",\n    milestone: [\n      { year: 1973, event: \"Developed concepts used for Graphic User Interfaces\" },\n      { year: 1980, event: \"Helped develop the Smalltalk-80 programming language\" },\n    ],\n    quote: \"Don`t ask whether you can do something, but how to do it.\"\n  },\n  {\n    key: CardKey.Nine,\n    type: CardSuit.Hearts,\n    coder: \"Brian Kernighan\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Brian_Kernighan.png\",\n    milestone: [\n      { year: 1970, event: \"Co-created the Unix operating system\" },\n      { year: 1972, event: \"Created the first \\\"Hello World\\\" program\" },\n      { year: 1977, event: \"Co-authored the AWK programming language\" },\n    ],\n    quote: \"Don`t comment bad code-rewrite it.\"\n  },\n  {\n    key: CardKey.Ten,\n    type: CardSuit.Hearts,\n    coder: \"Donald Knuth\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Donald_Knuth.jpg\",\n    milestone: [\n      { year: 1973, event: \"Published The Art of Computer programming\" },\n      { year: 1978, event: \"Designed the TeX tyypesetting system\" },\n    ],\n    quote: \"Science is what we understand well enough to explain to a computer. Art is everything else we do.\"\n  },\n  {\n    key: CardKey.Jack,\n    type: CardSuit.Hearts,\n    coder: \"Judea Pearl\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Judea_Pearl.png\",\n    milestone: [\n      { year: 1970, event: \"Created the probabilistic approach to artifical intelligence\" },\n      { year: 1985, event: \"Invented Bayesian Networks\" },\n    ],\n    quote: \"The surest kind of knowledge is what you construct yourself.\"\n  },\n  {\n    key: CardKey.Queen,\n    type: CardSuit.Hearts,\n    coder: \"John McCarthy\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/John_McCarthy.jpg\",\n    milestone: [\n      { year: 1955, event: \"Coined the term \\\"Artifical Intelligence\\\"\" },\n      { year: 1958, event: \"Created the LISP high-level programming language\" },\n    ],\n    quote: \"Everyone needs computer programming. It will be the way we speak to the servants.\"\n  },\n  {\n    key: CardKey.King,\n    type: CardSuit.Hearts,\n    coder: \"Maurice Wilkes\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Maurice_Wilkes.png\",\n    milestone: [\n      { year: 1949, event: \"A good part of the remainder of my life was going to be spent in finding errors in my own programs\" },\n    ],\n    quote: \".\"\n  },\n]\n\nexport default HeartCards","import { PokerCard, CardKey, CardSuit, UserGender } from \"../../../interfaces\"\n\nconst ClubCards: PokerCard[] = [\n  {\n    key: CardKey.Ace,\n    type: CardSuit.Clubs,\n    coder: \"Ida Rhodes\",\n    gender: UserGender.Female,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Ida_Rhodes.jpeg\",\n    milestone: [\n      { year: 1940, event: \"Worked on Mathematical Tables Project\" },\n      { year: 1950, event: \"Designed the C-10 programming language for the UMIVAC-I(with Betty Holberton)\" },\n    ],\n    quote: \"Whenever I see anyone reading a copy of Science Fiction, I gloat silently over the fact that I get my thrills not vicariously but through actual experience.\"\n  },\n  {\n    key: CardKey.Two,\n    type: CardSuit.Clubs,\n    coder: \"Bram Cohen\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Bram_Cohen.jpg\",\n    milestone: [\n      { year: 2002, event: \"Created the BitTorrent peer-to-peer protocol\" },\n    ],\n    quote: \"You get so tired of having your work die. I just wanted to make something that people would actually use.\"\n  },\n  {\n    key: CardKey.Three,\n    type: CardSuit.Clubs,\n    coder: \"Brendan Eich\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Brendan_Eich.jpg\",\n    milestone: [\n      { year: 1995, event: \"Created JavaScript\" },\n    ],\n    quote: \"If the web can be evolved to include the missing APIs and have better performance, developers won`t need to go beyond the web.\"\n  },\n  {\n    key: CardKey.Four,\n    type: CardSuit.Clubs,\n    coder: \"Sophie Wilson\",\n    gender: UserGender.Female,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Sophie_Wilson.jpg\",\n    milestone: [\n      { year: 1978, event: \"Designed the Acorn MicroComputer\" },\n      { year: 1981, event: \"Developed BBC Basic programming language\" },\n    ],\n    quote: \"I`m the rare engineer who says the answer is obviously Z. It makes me a dangerous person to employ in IT but a useful one.\"\n  },\n  {\n    key: CardKey.Five,\n    type: CardSuit.Clubs,\n    coder: \"James Gosling\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/James_Gosling.jpg\",\n    milestone: [\n      { year: 1995, event: \"Created Java\" },\n    ],\n    quote: \"People think of security as a noun, something you go buy. In reality, it`s an abstract concept like happiness.\"\n  },\n  {\n    key: CardKey.Six,\n    type: CardSuit.Clubs,\n    coder: \"Bill Joy\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Bill_Joy.jpg\",\n    milestone: [\n      { year: 1976, event: \"Created the vi editor\" },\n      { year: 1978, event: \"Created the C shell for UNIX\" },\n    ],\n    quote: \"We have to encourage the future we want instead of trying to prevent the future war fear.\"\n  },\n  {\n    key: CardKey.Seven,\n    type: CardSuit.Clubs,\n    coder: \"Steve Wozniak\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Steve_Wozniak.jpg\",\n    milestone: [\n      { year: 1977, event: \"Designed the Apple II, the first mass-market microcomputer\" },\n      { year: 1987, event: \"Invented the universal remote control\" },\n    ],\n    quote: \"In the end, I hope there`s a little note somewhere taht says I designed a good computer.\"\n  },\n  {\n    key: CardKey.Eight,\n    type: CardSuit.Clubs,\n    coder: \"Ward Christensen\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Ward_Christensen.jpg\",\n    milestone: [\n      { year: 1977, event: \"Developed XMODEM, a simple file transfer protocol\" },\n      { year: 1978, event: \"Co-founder of CBBS bulletin board, first bulletin board brought online\" },\n    ],\n    quote: \"I patterned the software after the cork board and push-pins type of bulletin board, and coined the term \\\"BBS for it\\\".\"\n  },\n  {\n    key: CardKey.Nine,\n    type: CardSuit.Clubs,\n    coder: \"Dennis Ritchie\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Dennis_Ritchie.jpg\",\n    milestone: [\n      { year: 1970, event: \"Co-created the Unix operating system\" },\n      { year: 1978, event: \"Designed the C programming language\" },\n    ],\n    quote: \"Unix is basically a simple operating system, but you have to be a genius to understand the simplicity.\"\n  },\n  {\n    key: CardKey.Ten,\n    type: CardSuit.Clubs,\n    coder: \"Dana Ulery\",\n    gender: UserGender.Female,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Dana_Ulery.jpg\",\n    milestone: [\n      { year: 1961, event: \"Pioneered early scientific computing applications\" },\n      { year: 1971, event: \"Established Electronic Data Interchange standards\" },\n    ],\n    quote: \"Knowledge management is about using information to formulate the right problem in the first place, a tremendous and often unrecognized challenge in itself.\"\n  },\n  {\n    key: CardKey.Jack,\n    type: CardSuit.Clubs,\n    coder: \"Frances Allen\",\n    gender: UserGender.Female,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Frances_Allen.jpg\",\n    milestone: [\n      { year: 1962, event: \"Designed the compiler for the IBM Stretch, one of the first supercomputers.\" },\n    ],\n    quote: \"A very big step was not only identifying parallelism, but identifying useful parallelism.\"\n  },\n  {\n    key: CardKey.Queen,\n    type: CardSuit.Clubs,\n    coder: \"Marvin Minsky\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Marvin_Minsky.jpg\",\n    milestone: [\n      { year: 1951, event: \"Invented the neural network and the first self-learning machine\" },\n      { year: 1963, event: \"Invented the first head-mounted graphical display\" },\n    ],\n    quote: \"No computer has ever been designed that is ever aware of what it`s doing; but most of the time, we aren`t either.\"\n  },\n  {\n    key: CardKey.King,\n    type: CardSuit.Clubs,\n    coder: \"Alan Turing\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Alan_Kay.png\",\n    milestone: [\n      { year: 1936, event: \"Invented the Turing Machine\" },\n      { year: 1939, event: \"Developed computers that could crack Nazi encryption\" },\n      { year: 1950, event: \"Invented the Turing Test\" },\n    ],\n    quote: \"We can only see a short distance ahead, but we can see plenty there that needs to be done.\"\n  },\n]\n\nexport default ClubCards","import { PokerCard, CardKey, CardSuit, UserGender } from \"../../../interfaces\"\n\nconst DiamondCards: PokerCard[] = [\n  {\n    key: CardKey.Ace,\n    type: CardSuit.Diamonds,\n    coder: \"Dorothy Vaughan\",\n    gender: UserGender.Female,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Dorothy_Vaughan.png\",\n    milestone: [\n      { year: 1943, event: \"Calculated flight trajectories for the US space program\" },\n      { year: 1961, event: \"Taught her entire staff FORTRAN programming\" },\n    ],\n    quote: \"I Changed What I could, and what I couldn`t, I endured.\"\n  },\n  {\n    key: CardKey.Two,\n    type: CardSuit.Diamonds,\n    coder: \"Parisa Tabriz\",\n    gender: UserGender.Female,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Parisa_Tabriz.jpg\",\n    milestone: [\n      { year: 2016, event: \"Oversees the security of Google Chrome\" },\n      { year: 2018, event: \"Founded Our Security Advocates Conference\" },\n    ],\n    quote: \"It`s often harder to consistently write secure code than it is to point out insecure code.\"\n  },\n  {\n    key: CardKey.Three,\n    type: CardSuit.Diamonds,\n    coder: \"Yukihiro Matsumoto\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Yukihiro_Matsumoto.jpeg\",\n    milestone: [\n      { year: 1995, event: \"Designed the Ruby programming language\" },\n    ],\n    quote: \"I believe consistency and orthogonality are tools of design, not the primary goal in design.\"\n  },\n  {\n    key: CardKey.Four,\n    type: CardSuit.Diamonds,\n    coder: \"Stephen Wolfram\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Stephen_Wolfram.jpg\",\n    milestone: [\n      { year: 1986, event: \"Developed the Mathematica computer algebra system\" },\n      { year: 1988, event: \"Developed the Wolfram Alpha answer engine\" },\n    ],\n    quote: \"Could it be that some place out there in the computational universe, we might find our physical universe?\"\n  },\n  {\n    key: CardKey.Five,\n    type: CardSuit.Diamonds,\n    coder: \"Alexey Pajitnov\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Alexey_Pajitnov.jpg\",\n    milestone: [\n      { year: 1984, event: \"Designed and programmed Tetris\" },\n    ],\n    quote: \"Tetris had a very important role in breaking down ordinary people`s inhibitions in front of computers.\"\n  },\n  {\n    key: CardKey.Six,\n    type: CardSuit.Diamonds,\n    coder: \"Phil Zimmermann\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Phil_Zimmermann.jpg\",\n    milestone: [\n      { year: 1991, event: \"Created the Pretty Good Privacy public-key encryption program\" },\n    ],\n    quote: \"If privacy is outlawed, only outlaws will have privacy.\"\n  },\n  {\n    key: CardKey.Seven,\n    type: CardSuit.Diamonds,\n    coder: \"Radia Perlman\",\n    gender: UserGender.Female,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Radia_Perlman.jpg\",\n    milestone: [\n      { year: 1985, event: \"Designed the Spanning Tree Protocol for Ethernet\" },\n    ],\n    quote: \"Start out with finding the right problem to solve.\"\n  },\n  {\n    key: CardKey.Eight,\n    type: CardSuit.Diamonds,\n    coder: \"Andrew Yao\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Andrew_Yao.jpeg\",\n    milestone: [\n      { year: 1997, event: \"Proposed Yao`s Minimax Principle, using the minimax theorem\" },\n      { year: 1979, event: \"Introduced theory of communication complexity\" },\n      { year: 1982, event: \"Developed Yao`s Millionaires` problem and Yao`s Test\" },\n    ],\n    quote: \"If you have something in mind, go ahead with it. Even if you don`t make it to the end, you may yet make it further than others.\"\n  },\n  {\n    key: CardKey.Nine,\n    type: CardSuit.Diamonds,\n    coder: \"Vint Cerf & Bob Kahn\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Vint_Cerf_And_Bob_Kahn.png\",\n    milestone: [\n      { year: 1983, event: \"Invented the Transmission Control Protocol\" },\n      { year: 1983, event: \"Invented the Internet Protocol\" },\n    ],\n    quote: \"You don`t have to be young to learrn about technology. You have to feel young. - Vint Cerf\"\n  },\n  {\n    key: CardKey.Ten,\n    type: CardSuit.Diamonds,\n    coder: \"Alan Kay\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Alan_Kay.png\",\n    milestone: [\n      { year: 1970, event: \"Pioneered use of Object-Orientted Programming\" },\n    ],\n    quote: \"The best way to predict the future is to invent it.\"\n  },\n  {\n    key: CardKey.Jack,\n    type: CardSuit.Diamonds,\n    coder: \"Margaret Hamilton\",\n    gender: UserGender.Female,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Margaret_Hamilton.jpg\",\n    milestone: [\n      { year: 1969, event: \"Lead software development for the Apollp Moon Landing mission\" },\n    ],\n    quote: \"Looking back, we were the luckiest people in the world. There was no choice but to be pioneers.\"\n  },\n  {\n    key: CardKey.Queen,\n    type: CardSuit.Diamonds,\n    coder: \"Jean E. Sammet\",\n    gender: UserGender.Female,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Jean_E._Sammet.png\",\n    milestone: [\n      { year: 1959, event: \"Helped develop the COBOL programming language\" },\n      { year: 1962, event: \"Developed the FORMAC programming language\" },\n    ],\n    quote: \"At that point...there was relatively little discrimination against women because programmers were very scarce. And so it didn`t matter whether you had three heads.\"\n  },\n  {\n    key: CardKey.King,\n    type: CardSuit.Diamonds,\n    coder: \"Vera Molnar\",\n    gender: UserGender.Male,\n    picture: \"http://q3259ne1t.bkt.clouddn.com/Vera_Molnar.png\",\n    milestone: [\n      { year: 1959, event: \"Started iterating combinatorial images\" },\n      { year: 1968, event: \"Began to create algorithmic paintings based on geometric shapes and themes\" },\n    ],\n    quote: \"The machine, which is thought to be cold and inhuman, can help to realize what is most profound in a human being.\"\n  },\n]\n\nexport default DiamondCards","import JokerCards from './poker-coder/en/joker'\nimport SpadeCards from './poker-coder/en/spade'\nimport HeartCards from './poker-coder/en/heart'\nimport ClubCards from './poker-coder/en/club'\nimport DiamondCards from './poker-coder/en/diamond'\nimport { PokerCard } from '../interfaces'\n\nexport const PokerList: PokerCard[] = [\n  ...JokerCards,\n  ...SpadeCards,\n  ...HeartCards,\n  ...ClubCards,\n  ...DiamondCards,\n]","import { REQUEST_POKER_CARD_ACTION, RECEIVE_POKER_CARD_ACTION } from './types'\nimport { PokerCard } from '../../interfaces'\nimport { Dispatch } from 'redux'\nimport { getPoker } from '../../api'\n\nexport const requestPoker = () => {\n  return {\n    type: REQUEST_POKER_CARD_ACTION,\n  }\n}\n\nexport const receivePoker = (list: PokerCard[]) => {\n  return {\n    type: RECEIVE_POKER_CARD_ACTION,\n    payload: { list: list }\n  }\n}\n\nexport const fetchPoker = () => (dispatch: Dispatch) => {\n  dispatch(requestPoker())\n  return getPoker()\n    .then(({ data }) => dispatch(receivePoker(data)))\n    .catch(() => dispatch(receivePoker([])))\n}\n\n","import { PokerCard } from '../../interfaces'\n\nexport interface PokerCardState {\n  list: PokerCard[]\n  loading: boolean\n}\n\nexport const REQUEST_POKER_CARD_ACTION = 'REQUEST_POKER_CARD_ACTION'\n\nexport interface requestPokerCardAction {\n  type: typeof REQUEST_POKER_CARD_ACTION\n}\n\nexport const RECEIVE_POKER_CARD_ACTION = 'RECEIVE_POKER_CARD_ACTION'\n\nexport interface receivePokerCardAction {\n  type: typeof RECEIVE_POKER_CARD_ACTION\n  payload: { list: PokerCard[] }\n}","import React from \"react\"\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    svg: {\n      transform: 'rotate(180deg)',\n    },\n  }),\n)\n\nconst CardIconSvgSwitcher: React.FC<{cardType: string, cardKey: string}> = ({ cardType, cardKey }) => {\n  const renderSvg = () => {\n    switch(cardType) {\n      case 'Spades':\n        return <SpadesIconSvg />\n      case 'Hearts':\n        return <HeartsIconSvg />\n      case 'Clubs':\n        return <ClubsIconSvg />\n      case 'Diamonds':\n        return <DiamondsIconSvg />\n      case 'Jokers':\n        return (cardKey === 'BigJoker')\n          ? <BigJokersIconSvg />\n          : <LittleJokersIconSvg />\n      default:\n        return <div>{cardKey}</div>\n    }\n  }\n\n  return (\n    <span>{ renderSvg() }</span>\n  )\n}\n\nconst BigJokersIconSvg: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\" y=\"0px\"\n      width=\"30\" height=\"30\"\n      viewBox=\"0 0 172 172\"\n      style={{fill: '#000000'}}\n      className={classes.svg}\n    >\n      <g fill=\"none\" fillRule=\"nonzero\" stroke=\"none\" strokeWidth=\"1\" strokeLinecap=\"butt\" strokeLinejoin=\"miter\" strokeMiterlimit=\"10\" strokeDasharray=\"\" strokeDashoffset=\"0\" fontFamily=\"none\" fontWeight=\"none\" fontSize=\"none\" textAnchor=\"none\" style={{mixBlendMode: 'normal'}}>\n        <path d=\"M0,172v-172h172v172z\" fill=\"none\"></path>\n        <g fill=\"#e74c3c\">\n          <path d=\"M136.36263,62.82031c0.89583,5.03906 5.26302,8.84635 10.55403,8.84635c5.9349,0 10.75,-4.8151 10.75,-10.75c0,-5.9349 -4.8151,-10.75 -10.75,-10.75c-3.30338,0 -6.21484,1.51172 -8.17448,3.83528c-6.77474,-3.49935 -16.54492,-5.51497 -29.75847,-0.83984c-9.43424,3.33138 -15.87304,9.37826 -20.21224,16.85286c-3.55534,-11.8138 -9.1543,-20.85612 -16.93685,-26.81901c-14.19336,-10.88997 -29.84245,-7.30664 -30.51433,-7.16667l-5.68294,1.42774c-0.92383,-5.01107 -5.29101,-8.79037 -10.55403,-8.79037c-5.9349,0 -10.75,4.8151 -10.75,10.75c0,5.9349 4.8151,10.75 10.75,10.75c3.91927,0 7.27865,-2.09961 9.18229,-5.20703c2.71549,1.0638 5.23503,2.23958 6.49479,3.30338c1.87565,1.56771 2.1836,2.6875 3.63933,7.16667c1.84765,5.68294 2.6875,19.42839 -12.56967,47.56315c-5.26302,9.71419 -5.9069,21.94792 -1.73567,32.72591c0.08399,0.22396 0.22396,0.41992 0.30794,0.61589c-5.03906,0.89583 -8.90235,5.26302 -8.90235,10.58203c0,5.9349 4.8151,10.75 10.75,10.75h107.5c5.9349,0 10.75,-4.8151 10.75,-10.75c0,-5.79492 -4.61914,-10.49805 -10.35807,-10.72201c3.80729,-11.08594 2.77148,-26.875 -7.11068,-40.78841c-19.03646,-26.84701 -7.97851,-32.30599 3.33138,-32.58594zM44.42774,109.82357c13.38151,-24.66341 18.02865,-44.20378 13.82942,-58.14518c1.65169,0.72786 3.35938,1.70768 5.01107,3.02344c9.57422,7.5026 14.97722,23.34765 15.5651,45.63151v35.83333h-32.16601c-1.23177,-1.56771 -2.35156,-3.44336 -3.19141,-5.62695c-2.6875,-6.91472 -2.32356,-14.64128 0.95183,-20.71615z\"></path>\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nconst LittleJokersIconSvg: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\" y=\"0px\"\n      width=\"30\" height=\"30\"\n      viewBox=\"0 0 172 172\"\n      style={{fill: '#000000'}}\n      className={classes.svg}\n    >\n      <g fill=\"none\" fillRule=\"nonzero\" stroke=\"none\" strokeWidth=\"1\" strokeLinecap=\"butt\" strokeLinejoin=\"miter\" strokeMiterlimit=\"10\" strokeDasharray=\"\" strokeDashoffset=\"0\" fontFamily=\"none\" fontWeight=\"none\" fontSize=\"none\" textAnchor=\"none\" style={{mixBlendMode: 'normal'}}>\n        <path d=\"M0,172v-172h172v172z\" fill=\"none\"></path>\n        <g fill=\"#666666\">\n          <path d=\"M136.36263,62.82031c0.89583,5.03906 5.26302,8.84635 10.55403,8.84635c5.9349,0 10.75,-4.8151 10.75,-10.75c0,-5.9349 -4.8151,-10.75 -10.75,-10.75c-3.30338,0 -6.21484,1.51172 -8.17448,3.83528c-6.77474,-3.49935 -16.54492,-5.51497 -29.75847,-0.83984c-9.43424,3.33138 -15.87304,9.37826 -20.21224,16.85286c-3.55534,-11.8138 -9.1543,-20.85612 -16.93685,-26.81901c-14.19336,-10.88997 -29.84245,-7.30664 -30.51433,-7.16667l-5.68294,1.42774c-0.92383,-5.01107 -5.29101,-8.79037 -10.55403,-8.79037c-5.9349,0 -10.75,4.8151 -10.75,10.75c0,5.9349 4.8151,10.75 10.75,10.75c3.91927,0 7.27865,-2.09961 9.18229,-5.20703c2.71549,1.0638 5.23503,2.23958 6.49479,3.30338c1.87565,1.56771 2.1836,2.6875 3.63933,7.16667c1.84765,5.68294 2.6875,19.42839 -12.56967,47.56315c-5.26302,9.71419 -5.9069,21.94792 -1.73567,32.72591c0.08399,0.22396 0.22396,0.41992 0.30794,0.61589c-5.03906,0.89583 -8.90235,5.26302 -8.90235,10.58203c0,5.9349 4.8151,10.75 10.75,10.75h107.5c5.9349,0 10.75,-4.8151 10.75,-10.75c0,-5.79492 -4.61914,-10.49805 -10.35807,-10.72201c3.80729,-11.08594 2.77148,-26.875 -7.11068,-40.78841c-19.03646,-26.84701 -7.97851,-32.30599 3.33138,-32.58594zM44.42774,109.82357c13.38151,-24.66341 18.02865,-44.20378 13.82942,-58.14518c1.65169,0.72786 3.35938,1.70768 5.01107,3.02344c9.57422,7.5026 14.97722,23.34765 15.5651,45.63151v35.83333h-32.16601c-1.23177,-1.56771 -2.35156,-3.44336 -3.19141,-5.62695c-2.6875,-6.91472 -2.32356,-14.64128 0.95183,-20.71615z\"></path>\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nconst SpadesIconSvg: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\" y=\"0px\"\n      width=\"30\" height=\"30\"\n      viewBox=\"0 0 172 172\"\n      style={{fill: '#000000'}}\n      className={classes.svg}\n    >\n      <g fill=\"none\" fillRule=\"nonzero\" stroke=\"none\" strokeWidth=\"1\" strokeLinecap=\"butt\" strokeLinejoin=\"miter\" strokeMiterlimit=\"10\" strokeDasharray=\"\" strokeDashoffset=\"0\" fontFamily=\"none\" fontWeight=\"none\" fontSize=\"none\" textAnchor=\"none\" style={{mixBlendMode: 'normal'}}>\n        <path d=\"M0,172v-172h172v172z\" fill=\"none\"></path>\n        <g fill=\"#1abc9c\">\n          <path d=\"M86,14.33333c0,0 -64.5,50.95052 -64.5,79.61719c0,19.12044 16.125,35.04948 35.4694,35.04948c9.54622,0 16.6569,-4.36719 21.86393,-7.16667l-16.32097,25.47526c-2.37956,4.75911 1.0918,10.35807 6.41081,10.35807h34.15365c5.31901,0 8.79036,-5.59896 6.41081,-10.35807l-16.32097,-25.47526c4.78711,2.51953 11.42188,7.16667 21.86393,7.16667c19.3444,0 35.4694,-15.92903 35.4694,-35.04948c0,-28.66667 -64.5,-79.61719 -64.5,-79.61719z\"></path>\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nconst HeartsIconSvg: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\" y=\"0px\"\n      width=\"30\" height=\"30\"\n      viewBox=\"0 0 172 172\"\n      style={{fill: '#000000'}}\n      className={classes.svg}\n    >\n      <g fill=\"none\" fillRule=\"nonzero\" stroke=\"none\" strokeWidth=\"1\" strokeLinecap=\"butt\" strokeLinejoin=\"miter\" strokeMiterlimit=\"10\" strokeDasharray=\"\" strokeDashoffset=\"0\" fontFamily=\"none\" fontWeight=\"none\" fontSize=\"none\" textAnchor=\"none\" style={{mixBlendMode: 'normal'}}>\n        <path d=\"M0,172v-172h172v172z\" fill=\"none\"></path>\n        <g fill=\"#e74c3c\">\n          <path d=\"M86,152.38125l-2.19031,-1.81406c-3.44,-2.84875 -8.0625,-5.99312 -13.39719,-9.63469c-21.19094,-14.45875 -53.2125,-36.30812 -53.2125,-71.15156c0,-21.40594 17.53594,-38.82094 39.08969,-38.82094c11.52938,0 22.31969,5.01219 29.71031,13.61219c7.39063,-8.6 18.19438,-13.61219 29.71031,-13.61219c21.55375,0 39.08969,17.415 39.08969,38.82094c0,34.84344 -32.02156,56.69281 -53.2125,71.15156c-5.34812,3.64156 -9.95719,6.78594 -13.39719,9.63469z\"></path>\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nconst ClubsIconSvg: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\" y=\"0px\"\n      width=\"30\" height=\"30\"\n      viewBox=\"0 0 172 172\"\n      style={{fill: '#000000'}}\n      className={classes.svg}\n    >\n      <g fill=\"none\" fillRule=\"nonzero\" stroke=\"none\" strokeWidth=\"1\" strokeLinecap=\"butt\" strokeLinejoin=\"miter\" strokeMiterlimit=\"10\" strokeDasharray=\"\" strokeDashoffset=\"0\" fontFamily=\"none\" fontWeight=\"none\" fontSize=\"none\" textAnchor=\"none\" style={{mixBlendMode: 'normal'}}>\n        <path d=\"M0,172v-172h172v172z\" fill=\"none\"></path>\n        <g fill=\"#1abc9c\">\n          <path d=\"M129,64.5c-8.17448,0 -21.30403,9.57422 -32.08203,18.84049c8.11849,-13.35351 17.74869,-31.1582 17.74869,-40.34049c0,-15.84505 -12.82161,-28.66667 -28.66667,-28.66667c-15.84505,0 -28.66667,12.82162 -28.66667,28.66667c0,9.18229 9.63021,26.98698 17.7487,40.34049c-10.778,-9.26627 -23.90756,-18.84049 -32.08203,-18.84049c-15.84505,0 -28.66667,12.82162 -28.66667,28.66667c0,15.84506 12.82162,28.66667 28.66667,28.66667c8.34245,0 21.77995,-5.96289 32.66992,-11.58984c5.96289,-2.07162 3.16341,4.42317 3.16341,4.42317l-16.32097,32.64193c-2.37956,4.75911 1.0918,10.35807 6.41081,10.35807h34.15365c5.31901,0 8.79036,-5.59896 6.41081,-10.35807l-16.32097,-32.64193c0,0 -2.35156,-6.60677 3.16341,-4.42317c10.88998,5.62695 24.32748,11.58984 32.66992,11.58984c15.84506,0 28.66667,-12.82161 28.66667,-28.66667c0,-15.84505 -12.82161,-28.66667 -28.66667,-28.66667z\"></path>\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nconst DiamondsIconSvg: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\" y=\"0px\"\n      width=\"30\" height=\"30\"\n      viewBox=\"0 0 172 172\"\n      style={{fill: '#000000'}}\n      className={classes.svg}\n    >\n      <g fill=\"none\" fillRule=\"nonzero\" stroke=\"none\" strokeWidth=\"1\" strokeLinecap=\"butt\" strokeLinejoin=\"miter\" strokeMiterlimit=\"10\" strokeDasharray=\"\" strokeDashoffset=\"0\" fontFamily=\"none\" fontWeight=\"none\" fontSize=\"none\" textAnchor=\"none\" style={{mixBlendMode: 'normal'}}>\n        <path d=\"M0,172v-172h172v172z\" fill=\"none\"></path>\n        <g fill=\"#e74c3c\">\n          <path d=\"M79.92513,154.58724l-47.8711,-59.18099c-4.50716,-5.57097 -4.50716,-13.46549 0,-19.03646l47.8711,-59.18099c3.10742,-3.80729 8.95833,-3.80729 12.03776,0l47.89909,59.18099c4.50716,5.57097 4.50716,13.46549 0,19.03646l-47.89909,59.18099c-3.07942,3.80729 -8.93033,3.80729 -12.03776,0z\"></path>\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nexport default CardIconSvgSwitcher","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport { fetchPoker } from '../store/poker/actions'\nimport { AppState } from '../store'\nimport { PokerCardState } from '../store/poker/types'\nimport PokerItem from './poker-item'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    gridRoot: {\n      margin: 0,\n      padding: '0',\n      width: '100%',\n      flexGrow: 1,\n      [theme.breakpoints.up('xs')]: {\n        padding: '0 8px',\n      },\n      [theme.breakpoints.up('sm')]: {\n        padding: '0 16px',\n      },\n      [theme.breakpoints.up('md')]: {\n        padding: '0 24px',\n      },\n      [theme.breakpoints.up('lg')]: {\n        padding: '0 32px',\n      },\n    },\n  }),\n)\n\ntype PokerContainerProps = { pokerReducer: PokerCardState } & { fetchPoker: () => void }\n\nconst PokerContainerWithRedux: React.FC<PokerContainerProps> = ({ pokerReducer, fetchPoker }) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    fetchPoker()\n  }, [])\n\n  return (\n    <Grid\n      container\n      className={classes.gridRoot}\n      spacing={1}\n    >\n      {pokerReducer.list.map((poker, index) => (\n        <Grid\n          container\n          alignItems=\"center\"\n          item xs={6} sm={4} md={3}\n          key={index}\n        >\n          <PokerItem poker={poker}/>\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n\nconst PokerContainer = connect((\n  { pokerReducer }: AppState) => ({ pokerReducer }),\n  { fetchPoker }\n)(PokerContainerWithRedux)\n\nexport default PokerContainer","import { PokerList } from \"../poker\"\nimport { PokerCard } from \"../interfaces\"\nimport { AppServerResponseData } from '../interfaces/commons'\n\nexport const getPoker = () => Promise.resolve<AppServerResponseData<PokerCard[]>>({\n  success: true,\n  data: PokerList,\n})","import React from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport PokerContainer from '../../components/poker-container'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: '16px 0',\n      [theme.breakpoints.up('sm')]: {\n        padding: '24px 0',\n      },\n      [theme.breakpoints.up('md')]: {\n        padding: '32px 0',\n      },\n    },\n  }),\n)\n\nconst AppDashboard: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <Container className={classes.root}>\n      <PokerContainer />\n    </Container>\n  )\n}\n\nexport default AppDashboard","import React, { Suspense } from 'react'\nimport AppDashboard from './app-dashboard'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport './App.css'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      fontSize: '12px',\n    },\n  }),\n)\n\nconst App: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <div className={ classes.root }>\n      <Suspense fallback=\"loading\">\n        <AppDashboard />\n      </Suspense>\n    </div>\n  )\n}\n\nexport default App","import { PokerCardState, REQUEST_POKER_CARD_ACTION, RECEIVE_POKER_CARD_ACTION, requestPokerCardAction, receivePokerCardAction } from './types'\n\nconst initialState = (): PokerCardState => {\n  return {\n    list: [],\n    loading: false,\n  }\n}\n\ntype PokerCardAction = requestPokerCardAction | receivePokerCardAction\n\nconst pokerReducer = (state = initialState(), actions: PokerCardAction): PokerCardState => {\n  switch (actions.type) {\n    case REQUEST_POKER_CARD_ACTION:\n      return { ...state, loading: true }\n    case RECEIVE_POKER_CARD_ACTION:\n      return { ...state, loading: false, list: actions.payload.list }\n    default:\n      return state\n  }\n}\n\nexport default pokerReducer","import { combineReducers, applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport pokerReducer from './poker/reducers'\n\nconst rootReducer = combineReducers({\n  pokerReducer: pokerReducer,\n})\n\nconst loggerMiddleware = createLogger()\n\nexport default function configureStore() {\n  const middleWares = [\n    thunkMiddleware,\n    loggerMiddleware,\n  ]\n  const middleWareEnhancer = applyMiddleware(...middleWares)\n\n  return createStore(\n    rootReducer,\n    composeWithDevTools(middleWareEnhancer),\n  )\n}\n\nexport type AppState = ReturnType<typeof rootReducer>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { AppContainer } from 'react-hot-loader'\nimport './index.css'\nimport App from './views/App'\nimport configureStore from './store'\nimport * as serviceWorker from './serviceWorker'\n\nexport const store = configureStore()\n\nReactDOM.render(\n  <AppContainer>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </AppContainer>\n  ,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}